/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package proyecto;

import java.awt.Color;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.util.Calendar;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.Timer;
import javax.swing.filechooser.FileNameExtensionFilter;

/**
 *
 * @author jonat
 */
public class Ventana extends javax.swing.JFrame {

    /**
     * Creates new form Ventana
     */
    int cont = 0;
    int a = 0;
    Timer reloj; // Declaramos un objeto Timer con el nombre de Reloj.
    String copyarchivo, copyarchivo2, copyarchivo3, copyarchivo4;

    public Ventana() {
        initComponents();
        this.getContentPane().setBackground(Color.white);
        JPanel1.setBackground(Color.white);
        BtnGuardar.setBackground(Color.white);
        Componentes(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        try {
            BtnCrearArchivo =(javax.swing.JButton)java.beans.Beans.instantiate(getClass().getClassLoader(), "proyecto.Ventana_jButton1");
        } catch (ClassNotFoundException e) {
            e.printStackTrace();
        } catch (java.io.IOException e) {
            e.printStackTrace();
        }
        JPanel1 = new javax.swing.JPanel();
        BtnGuardar = new javax.swing.JButton();
        BtnCancelar = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        JTextArea = new javax.swing.JTextArea();
        BtnGuardarComprimir = new javax.swing.JButton();
        BtnGuardarCifrar = new javax.swing.JButton();
        BtnComprimir = new javax.swing.JButton();
        BtnDescomprimir = new javax.swing.JButton();
        BtnSalir = new javax.swing.JButton();
        BtnAbrirArchivo = new javax.swing.JButton();
        BtnCifrar = new javax.swing.JButton();
        JProgressBar = new javax.swing.JProgressBar();
        jSeparator4 = new javax.swing.JSeparator();
        BtnDescifrar = new javax.swing.JButton();
        jSeparator5 = new javax.swing.JSeparator();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Compresor y Encriptador de Archivos");
        setBackground(new java.awt.Color(255, 255, 255));
        setResizable(false);

        BtnCrearArchivo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnCrearArchivoActionPerformed(evt);
            }
        });

        BtnGuardar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/1479989196_floppy.png"))); // NOI18N
        BtnGuardar.setText("Guardar");
        BtnGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnGuardarActionPerformed(evt);
            }
        });

        BtnCancelar.setBackground(new java.awt.Color(255, 255, 255));
        BtnCancelar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/1479989599_Close_Icon.png"))); // NOI18N
        BtnCancelar.setText("Cancelar");
        BtnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnCancelarActionPerformed(evt);
            }
        });

        JTextArea.setColumns(20);
        JTextArea.setRows(5);
        jScrollPane2.setViewportView(JTextArea);

        BtnGuardarComprimir.setBackground(new java.awt.Color(255, 255, 255));
        BtnGuardarComprimir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/1480610400_icon-141-box-filled.png"))); // NOI18N
        BtnGuardarComprimir.setText("Guardar/Comprimir");
        BtnGuardarComprimir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnGuardarComprimirActionPerformed(evt);
            }
        });

        BtnGuardarCifrar.setBackground(new java.awt.Color(255, 255, 255));
        BtnGuardarCifrar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/1.png"))); // NOI18N
        BtnGuardarCifrar.setText("Guardar/Cifrar");
        BtnGuardarCifrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnGuardarCifrarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout JPanel1Layout = new javax.swing.GroupLayout(JPanel1);
        JPanel1.setLayout(JPanel1Layout);
        JPanel1Layout.setHorizontalGroup(
            JPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(JPanel1Layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(JPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(JPanel1Layout.createSequentialGroup()
                        .addComponent(BtnGuardarCifrar, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(BtnGuardarComprimir)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(BtnGuardar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(BtnCancelar))
                    .addComponent(jScrollPane2))
                .addContainerGap())
        );
        JPanel1Layout.setVerticalGroup(
            JPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(JPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 298, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(JPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(BtnCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(BtnGuardar, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(BtnGuardarComprimir, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(BtnGuardarCifrar, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        BtnComprimir.setBackground(new java.awt.Color(255, 255, 255));
        BtnComprimir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/1480175529_icon-92-inbox-download.png"))); // NOI18N
        BtnComprimir.setText("Comprimir");
        BtnComprimir.setBorder(null);
        BtnComprimir.setBorderPainted(false);
        BtnComprimir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnComprimirActionPerformed(evt);
            }
        });

        BtnDescomprimir.setBackground(new java.awt.Color(255, 255, 255));
        BtnDescomprimir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/1480175540_icon-93-inbox-upload.png"))); // NOI18N
        BtnDescomprimir.setText("Descomprimir");
        BtnDescomprimir.setBorder(null);
        BtnDescomprimir.setBorderPainted(false);
        BtnDescomprimir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnDescomprimirActionPerformed(evt);
            }
        });

        BtnSalir.setBackground(new java.awt.Color(255, 255, 255));
        BtnSalir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/1480609672_free-29.png"))); // NOI18N
        BtnSalir.setText("Salir");
        BtnSalir.setBorder(null);
        BtnSalir.setBorderPainted(false);
        BtnSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnSalirActionPerformed(evt);
            }
        });

        BtnAbrirArchivo.setBackground(new java.awt.Color(255, 255, 255));
        BtnAbrirArchivo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/1480176136_icon-95-folder.png"))); // NOI18N
        BtnAbrirArchivo.setText("Abrir Archivo");
        BtnAbrirArchivo.setBorder(null);
        BtnAbrirArchivo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnAbrirArchivoActionPerformed(evt);
            }
        });

        BtnCifrar.setBackground(new java.awt.Color(255, 255, 255));
        BtnCifrar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/1480175614_icon-118-lock-rounded.png"))); // NOI18N
        BtnCifrar.setText("Cifrar Archivo");
        BtnCifrar.setBorder(null);
        BtnCifrar.setBorderPainted(false);
        BtnCifrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnCifrarActionPerformed(evt);
            }
        });

        jSeparator4.setOrientation(javax.swing.SwingConstants.VERTICAL);

        BtnDescifrar.setBackground(new java.awt.Color(255, 255, 255));
        BtnDescifrar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/1480175485_icon-24-key.png"))); // NOI18N
        BtnDescifrar.setText("Descifrar Archivo");
        BtnDescifrar.setBorder(null);
        BtnDescifrar.setBorderPainted(false);
        BtnDescifrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnDescifrarActionPerformed(evt);
            }
        });

        jSeparator5.setOrientation(javax.swing.SwingConstants.VERTICAL);

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Techo.png"))); // NOI18N

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Suelo.png"))); // NOI18N

        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/1480607640_info-square-blue.png"))); // NOI18N
        jLabel3.setText("jLabel3");
        jLabel3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel3MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(BtnAbrirArchivo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(BtnCrearArchivo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(BtnComprimir, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(BtnDescomprimir, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(BtnCifrar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(BtnDescifrar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(BtnSalir, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(JProgressBar, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(30, 30, 30)
                        .addComponent(jSeparator4, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(JPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(27, 27, 27)
                        .addComponent(jSeparator5, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(BtnAbrirArchivo, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(BtnCrearArchivo, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(BtnComprimir, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(BtnDescomprimir, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(BtnCifrar, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(BtnDescifrar, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(JProgressBar, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(11, 11, 11)
                        .addComponent(BtnSalir, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(jSeparator5, javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jSeparator4, javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(JPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGap(30, 30, 30)
                .addComponent(jLabel2))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void BtnCrearArchivoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnCrearArchivoActionPerformed
        // TODO add your handling code here:
        if (JPanel1.isEnabled() && JTextArea.getText().length() > 0) {
            int resp = JOptionPane.showConfirmDialog(null, "Desea guardar los cambios hechos en el archivo actual.? ", "Confirmacion", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
            if (resp == 0) {
                GuardaArchivo();
            } else {
                Componentes(false);
                JTextArea.setText("");
            }
        } else {
            Componentes(true);
        }
    }//GEN-LAST:event_BtnCrearArchivoActionPerformed

    private void BtnAbrirArchivoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnAbrirArchivoActionPerformed
        // TODO add your handling code here:
        JFileChooser fc = new JFileChooser();

        //Creamos el filtro
        FileNameExtensionFilter filtro = new FileNameExtensionFilter("Solo archivo *3jvc, *txt", "3jvc", "txt");
        fc.setFileFilter(filtro);

        int seleccion = fc.showOpenDialog(JPanel1);
        if (seleccion == JFileChooser.APPROVE_OPTION) {
            // Seleccionamos el fichero
            File fichero = fc.getSelectedFile();

            //Ecribe la ruta del fichero seleccionado en el campo de texto
            //TxtRuta.setText(fichero.getAbsolutePath());
            try (FileReader fr = new FileReader(fichero)) {
                String cadena = "";
                int valor = fr.read();
                while (valor != -1) {
                    cadena = cadena + (char) valor;
                    valor = fr.read();
                }
                JTextArea.setText(cadena);
                Componentes(true);
                //TxtRuta.setVisible(true);
            } catch (IOException e1) {
                e1.printStackTrace();
            }
        }
    }//GEN-LAST:event_BtnAbrirArchivoActionPerformed

    public void Componentes(boolean tf) {
        JPanel1.setEnabled(tf);
        BtnCancelar.setEnabled(tf);
        BtnGuardar.setEnabled(tf);
        BtnGuardarComprimir.setEnabled(tf);
        BtnGuardarCifrar.setEnabled(tf);
        JTextArea.setEnabled(tf);
    }

    public void CifrarArchivo() {

        //Objeto de la clase encriptar
        Encriptar encript = new Encriptar();

        //Objeto de la clase JFileChooser
        JFileChooser fc = new JFileChooser();

        //Filtros del FileChooser
        FileNameExtensionFilter filtro = new FileNameExtensionFilter("Solo archivos *3jvc, *txt", "3jvc", "txt");
        fc.setFileFilter(filtro);

        int seleccion = fc.showOpenDialog(this);

        if (seleccion == JFileChooser.APPROVE_OPTION) {
            // Seleccionamos el fichero
            File fichero = fc.getSelectedFile();

            //Selecciona con que extension se guardara el archivo
            String[] nombre = fc.getSelectedFile().toString().split("\\.");
            if (nombre[1].equals("txt")) {
                nombre[0] = nombre[0] + ".txt";
            } else if (nombre[1].equals("3jvc")) {
                nombre[0] = nombre[0] + ".3jvc";
            }

            copyarchivo = nombre[0];

            try (FileReader fr = new FileReader(fichero)) {
                String cadena = "";
                int valor = fr.read();
                while (valor != -1) {
                    cadena = cadena + (char) valor;
                    valor = fr.read();
                }
                encript.crear_arc(cadena, nombre[0]);
                encript.encriptacion_por_sus(nombre[0]);
                time(3);
            } catch (IOException e1) {
                e1.printStackTrace();
            }
        }
    }

    public void DescifrarArchivo() {

        //Objeto de la clase Encriptar
        Encriptar encript = new Encriptar();

        //Objeto de la clase JFileChooser
        JFileChooser fc = new JFileChooser();

        //Filtro
        FileNameExtensionFilter filtro = new FileNameExtensionFilter("Solo archivo *3jvc, *txt", "3jvc", "txt");
        fc.setFileFilter(filtro);

        int seleccion = fc.showOpenDialog(this);

        if (seleccion == JFileChooser.APPROVE_OPTION) {

            // Seleccionamos el fichero
            File fichero = fc.getSelectedFile();

            //Escribe nombre del archivo
            String n = fc.getSelectedFile().getName();

            //Selecciona con que extension se guardara el archivo
            String[] nombre = fc.getSelectedFile().toString().split("\\.");
            if (nombre[1].equals("txt")) {
                nombre[0] = nombre[0] + ".txt";
            } else if (nombre[1].equals("3jvc")) {
                nombre[0] = nombre[0] + ".3jvc";
            }

            copyarchivo2 = nombre[0];

            try (FileReader fr = new FileReader(fichero)) {
                String cadena = "";
                int valor = fr.read();
                while (valor != -1) {
                    cadena = cadena + (char) valor;
                    valor = fr.read();
                }
                encript.crear_arc(cadena, nombre[0]);
                encript.desencriptacion_por_sus(nombre[0]);
                time(4);
            } catch (IOException e1) {
                e1.printStackTrace();
            }
        }
    }

    public void GuardaryCifrar() {

        //Objeto de la clase Encriptar
        Encriptar encript = new Encriptar();

        //Objeto de la clase JFileChooser
        JFileChooser fc = new JFileChooser();

        //Abrimos la ventana, guardamos la opcion seleccionada por el usuario
        int seleccion = fc.showSaveDialog(this);

        //Si el usuario pincha en aceptar
        if (seleccion == JFileChooser.APPROVE_OPTION) {

            //Seleccionamos el fichero
            File fichero = fc.getSelectedFile();
            try (FileWriter fw = new FileWriter(fichero + ".3jvc")) {

                //Escribimos el texto en el fichero
                fw.write(JTextArea.getText());
                fw.close();

                Componentes(false);
                JTextArea.setText("");

            } catch (IOException e1) {
                e1.printStackTrace();
            }

            String[] nombre = fc.getSelectedFile().toString().split("\\.");

            copyarchivo3 = nombre[0] + ".3jvc";

            try (FileReader fr = new FileReader(nombre[0] + ".3jvc")) {
                String cadena = "";
                int valor = fr.read();
                while (valor != -1) {
                    cadena = cadena + (char) valor;
                    valor = fr.read();
                }
                encript.crear_arc(cadena, nombre[0] + ".3jvc");
                encript.encriptacion_por_sus(nombre[0] + ".3jvc");
                time(5);
            } catch (IOException e1) {
                e1.printStackTrace();
            }
        }
    }

    public void GuardaArchivo() {

        JFileChooser fc = new JFileChooser();

        //Abrimos la ventana, guardamos la opcion seleccionada por el usuario
        int seleccion = fc.showSaveDialog(this);

        //Si el usuario, pincha en aceptar
        if (seleccion == JFileChooser.APPROVE_OPTION) {

            //Seleccionamos el fichero
            File fichero = fc.getSelectedFile();

            try (FileWriter fw = new FileWriter(fichero + ".3jvc")) {
                //Escribimos el texto en el fichero
                fw.write(JTextArea.getText());
                fw.close();
                JOptionPane.showMessageDialog(null, "Archivo creado Exitosamente");
                Componentes(false);
                JTextArea.setText("");

            } catch (IOException e1) {
                e1.printStackTrace();
            }
            JTextArea.setText("");
        }
    }

    public void ComprimirArchivo() {
        try {
            //Instancia de la clase
            LZWCompresion lzw = new LZWCompresion();
            JFileChooser fc = new JFileChooser();

            //Abrimos la ventana, guardamos la opcion seleccionada por el usuario
            int seleccion = fc.showSaveDialog(this);

            //Si el usuario, pincha en aceptar
            if (seleccion == JFileChooser.APPROVE_OPTION) {
                //Seleccionamos el fichero
                String str = fc.getSelectedFile().toString(); //Para ingresar el nombre del objeto que tenemos almacenado

                //File file = new File(str);
                lzw.compress(str);
                time(1);
            }
        } catch (FileNotFoundException e) {
            System.out.println("¡Archivo no encontrado!");
        } catch (IOException ex) {
            Logger.getLogger(Ventana.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    public void DescomprimirArchivo() {
        try {
            //Instancia de la clase
            LZWDescompresion lzw = new LZWDescompresion();
            JFileChooser fc = new JFileChooser();
            FileNameExtensionFilter filtro = new FileNameExtensionFilter("Solo archivo .lzw", "lzw");

            //Le indicamos el filtro
            fc.setFileFilter(filtro);
            //Abrimos la ventana, guardamos la opcion seleccionada por el usuario
            int seleccion = fc.showSaveDialog(JPanel1);
            //Si el usuario, pincha en aceptar
            if (seleccion == JFileChooser.APPROVE_OPTION) {
                //Seleccionamos el fichero
                String str = fc.getSelectedFile().toString(); //Para ingresar el nombre del objeto que tenemos almacenado
                File file = new File(str);
                lzw.LZW_Decompress(str);
                time(2);
            }
            //reloj.start();
        } catch (FileNotFoundException e) {
            System.out.println("¡Archivo no encontrado!");
        } catch (IOException ex) {
            Logger.getLogger(Ventana.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    public void GuardarComprimir(){
        //Objeto de la clase JFileChooser
        JFileChooser fc = new JFileChooser();

        LZWCompresion lzw = new LZWCompresion();
        
        //Abrimos la ventana, guardamos la opcion seleccionada por el usuario
        int seleccion = fc.showSaveDialog(this);

        //Si el usuario pincha en aceptar
        if (seleccion == JFileChooser.APPROVE_OPTION) {
            File fichero = fc.getSelectedFile();

            try (FileWriter fw = new FileWriter(fichero + ".3jvc")) {
                //Escribimos el texto en el fichero
                fw.write(JTextArea.getText());
                fw.close();
                Componentes(false);
                JTextArea.setText("");
            } catch (IOException e1) {
                e1.printStackTrace();
            }
            
            String str = fc.getSelectedFile().toString() + ".3jvc"; //Para ingresar el nombre del objeto que tenemos almacenado
            //JOptionPane.showMessageDialog(null, str);
            try {
                lzw.compress(str);
                copyarchivo4 = str;
                time(6);
            } catch (IOException ex) {
                Logger.getLogger(Ventana.class.getName()).log(Level.SEVERE, null, ex);
            }
                
        }
    }
    
    private void BtnGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnGuardarActionPerformed
        // TODO add your handling code here:
        if (JTextArea.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "El archivo esta vacio...!");
        } else {
            GuardaArchivo();
        }
    }//GEN-LAST:event_BtnGuardarActionPerformed

    private void BtnComprimirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnComprimirActionPerformed
        // TODO add your handling code here:
        ComprimirArchivo();
    }//GEN-LAST:event_BtnComprimirActionPerformed

    private void BtnGuardarComprimirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnGuardarComprimirActionPerformed
        // TODO add your handling code here:
        GuardarComprimir();
    }//GEN-LAST:event_BtnGuardarComprimirActionPerformed

    private void BtnCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnCancelarActionPerformed
        // TODO add your handling code here:
        int resp = JOptionPane.showConfirmDialog(null, "Estas Seguro.?", "Confirmacion", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
        if (resp == 0) {
            Componentes(false);
            JTextArea.setText("");
        } else {

        }
    }//GEN-LAST:event_BtnCancelarActionPerformed

    private void BtnSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnSalirActionPerformed
        // TODO add your handling code here:
        int resp = JOptionPane.showConfirmDialog(null, "Desea Salir.?", "Confirmacion", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
        if (resp == 0) {
            System.exit(0);
        } else {

        }
    }//GEN-LAST:event_BtnSalirActionPerformed

    private void BtnCifrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnCifrarActionPerformed
        // TODO add your handling code here:
        CifrarArchivo();
    }//GEN-LAST:event_BtnCifrarActionPerformed

    public void time(int a) {
        ActionListener taskPerformer; // Fin de la declaración del ActionListener.
        taskPerformer = new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent evt) {
                cont++;
                JProgressBar.setValue(cont);
                if (cont == 100 && a == 1) {
                    JOptionPane.showMessageDialog(null, "Archivo comprimido exitosamente", "Mensaje", JOptionPane.INFORMATION_MESSAGE);
                    JProgressBar.setValue(0);
                    cont = 0;
                    reloj.stop();
                } else if (cont == 100 && a == 2) {
                    JOptionPane.showMessageDialog(null, "Archivo descomprimido exitosamente", "Mensaje", JOptionPane.INFORMATION_MESSAGE);
                    JProgressBar.setValue(0);
                    cont = 0;
                    reloj.stop();
                } else if (cont == 100 && a == 3) {
                    JOptionPane.showMessageDialog(null, "Archivo cifrado exitosamente", "Mensaje", JOptionPane.INFORMATION_MESSAGE);
                    JProgressBar.setValue(0);
                    cont = 0;
                    File c = new File(copyarchivo + ".txt");
                    c.delete();
                    reloj.stop();
                } else if (cont == 100 && a == 4) {
                    JOptionPane.showMessageDialog(null, "Archivo descifrado exitosamente", "Mensaje", JOptionPane.INFORMATION_MESSAGE);
                    JProgressBar.setValue(0);
                    cont = 0;
                    File c = new File(copyarchivo2 + ".txt");
                    c.delete();
                    reloj.stop();
                } else if (cont == 100 && a == 5) {
                    JOptionPane.showMessageDialog(null, "Archivo guardado y cifrado exitosamente", "Mensaje", JOptionPane.INFORMATION_MESSAGE);
                    JProgressBar.setValue(0);
                    cont = 0;
                    File c = new File(copyarchivo3 + ".txt");
                    c.delete();
                    reloj.stop();
                } else if (cont == 100 && a == 6) {
                    JOptionPane.showMessageDialog(null, "Archivo guardado y comprimido exitosamente", "Mensaje", JOptionPane.INFORMATION_MESSAGE);
                    JProgressBar.setValue(0);
                    cont = 0;
                    File c = new File(copyarchivo4);
                    c.delete();
                    reloj.stop();
                }
            }
        };

        reloj = new Timer(5, taskPerformer);
        reloj.start();
    }
    
    private void BtnDescomprimirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnDescomprimirActionPerformed
        // TODO add your handling code here:
        DescomprimirArchivo();
    }//GEN-LAST:event_BtnDescomprimirActionPerformed

    private void BtnDescifrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnDescifrarActionPerformed
        // TODO add your handling code here:
        DescifrarArchivo();
    }//GEN-LAST:event_BtnDescifrarActionPerformed

    private void BtnGuardarCifrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnGuardarCifrarActionPerformed
        // TODO add your handling code here:
        GuardaryCifrar();
    }//GEN-LAST:event_BtnGuardarCifrarActionPerformed

    private void jLabel3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel3MouseClicked
        // TODO add your handling code here:
        //JOptionPane.showMessageDialog(null, "Creditos");
        Creditos c = new Creditos();
        c.setVisible(true);
    }//GEN-LAST:event_jLabel3MouseClicked

    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */

        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Ventana.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Ventana.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Ventana.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Ventana.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Ventana().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BtnAbrirArchivo;
    private javax.swing.JButton BtnCancelar;
    private javax.swing.JButton BtnCifrar;
    private javax.swing.JButton BtnComprimir;
    private javax.swing.JButton BtnCrearArchivo;
    private javax.swing.JButton BtnDescifrar;
    private javax.swing.JButton BtnDescomprimir;
    private javax.swing.JButton BtnGuardar;
    private javax.swing.JButton BtnGuardarCifrar;
    private javax.swing.JButton BtnGuardarComprimir;
    private javax.swing.JButton BtnSalir;
    private javax.swing.JPanel JPanel1;
    private javax.swing.JProgressBar JProgressBar;
    private javax.swing.JTextArea JTextArea;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSeparator jSeparator4;
    private javax.swing.JSeparator jSeparator5;
    // End of variables declaration//GEN-END:variables
}
